@model ListAssist.Data.Models.LAList

@{
    ViewBag.Title = "Edit List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section PageHeader {Edit!}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="small-12 medium-8 columns listDetailsEdit">
            @Html.HiddenFor(model => model.ID)
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "listDetailsName" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
        <div class="small-12 medium-4 columns">
            <button type="submit" value="Save" class="button expand">Save</button>
        </div>
        <div class="small-12 medium-6 columns listGrid">
            <div class="small-4 medium-3 columns listHeader">
                Done
            </div>
            <div class="small-8 medium-9 columns listHeader">
                Description
            </div>
        @for (var i = 0; i < Model.LAListItems.Count; i++)
        {
            @Html.HiddenFor(model => model.LAListItems[i].ID)
            @Html.HiddenFor(model => model.LAListItems[i].ListID)
            <div class="small-12 columns itemWrapper">
                <div class="row">
                    <div class="small-4 medium-3 columns itemCheck">
                        @Html.CheckBoxFor(model => model.LAListItems[i].Done)
                    </div>
                    <div class="small-6 medium-7 columns itemDescription">
                        @Html.EditorFor(model => model.LAListItems[i].Description)
                        @Html.ValidationMessageFor(model => model.LAListItems[i].Description, "", new { @class = "text-danger" })
                    </div>
                    <div class="small-2 columns removeItem">
                        @Html.ActionLink("X", "RemoveListItem", new { id = Model.LAListItems[i].ID })
                    </div>
                    <div name="itemDetails" class="small-12 columns hide">
                        <p>Put the details here...</p>
                        @Html.DisplayFor(model => model.LAListItems[i].Description)
                    </div>
                </div>
            </div>
        }
            <div class="small-12 columns">
                <button class="button expand success round">
                    @Html.ActionLink("Add Item", "AddListItem", new { id = Model.ID })
                </button>
            </div>
        </div>
        <div class="medium-6 columns show-for-medium-up listGrid">
            <div class="small-12 listHeader">
                Details
            </div>
            <div class="small-12 panel details">
                Click on an item to see some details
            </div>
        </div>
    </div>      
}

<script>
    $(".itemWrapper .itemDescription").click(function () {
        $(".itemWrapper").each(function () {
            $("[name='itemDetails']").addClass("hide").removeClass("show-for-small-only");
        });

        var data = $(this).parent().find("[name='itemDetails']").html();
        $(".panel.details").html(data);

        $(this).parent().find("[name='itemDetails']").addClass("show-for-small-only");
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
